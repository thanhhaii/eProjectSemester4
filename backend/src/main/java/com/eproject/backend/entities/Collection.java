package com.eproject.backend.entities;
// Generated Jan 3, 2022, 8:04:04 PM by Hibernate Tools 5.1.10.Final

import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * Collection generated by hbm2java
 */
@Entity
@Table(name = "collection", catalog = "photoshare")
@Getter
@Setter
@NoArgsConstructor
public class Collection implements java.io.Serializable {

	@Id

	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(generator = "UUID")
	@GenericGenerator(
			name = "UUID",
			strategy = "org.hibernate.id.UUIDGenerator"
	)
	private String id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "owner_id", nullable = false)
	private User user;

	@Temporal(TemporalType.TIMESTAMP)
	@CreatedDate
	@Column(name = "created_at", nullable = false, length = 10)
	private Date createdAt = new Date();

	@Column(name = "description", nullable = false, columnDefinition = "TEXT")
	private String description;

	@Column(name = "name", nullable = false, length = 200)
	private String name;

	@Column(name = "status", nullable = false, length = 15)
	private String status;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 10)
	@LastModifiedDate
	private Date updatedAt = new Date();

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "collection")
	private Set<ImageCollection> imageCollections = new HashSet<ImageCollection>(0);

	public Collection(String userID) {
		this.user = new User(userID);
		this.description = "collection";
		this.name = "collection";
		this.status = "show";
	}

	public Collection(String id, User user, Date createdAt, String description, String name, String status,
			Date updatedAt) {
		this.id = id;
		this.user = user;
		this.createdAt = createdAt;
		this.description = description;
		this.name = name;
		this.status = status;
		this.updatedAt = updatedAt;
	}

}
