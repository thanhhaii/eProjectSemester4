package com.eproject.backend.entities;
// Generated Jan 3, 2022, 8:04:04 PM by Hibernate Tools 5.1.10.Final

import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "photoshare", uniqueConstraints = {@UniqueConstraint(columnNames = "email"),
        @UniqueConstraint(columnNames = "username")})
@Getter
@Setter
public class User implements java.io.Serializable {

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(generator = "UUID")
    @GenericGenerator(
            name = "UUID",
            strategy = "org.hibernate.id.UUIDGenerator"
    )
    private String id;

    @Column(name = "username", unique = true, nullable = false, length = 50)
    private String username;

    @Column(name = "email", unique = true, nullable = false, length = 120)
    private String email;

    @Column(name = "password", nullable = false)
    private String password;

    @Column(name = "profile")
    private String profile;

    @Column(name = "verify_email", nullable = false)
    private boolean verifyEmail = false;

    @Temporal(TemporalType.DATE)
    @CreatedDate
    @Column(name = "created_at", updatable = false)
    private Date createdAt = new Date();

    @Temporal(TemporalType.DATE)
    @LastModifiedDate
    @Column(name = "updated_at")
    private Date updatedAt = new Date();

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    private Set<Collection> collections = new HashSet<Collection>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    private Set<Token> tokens = new HashSet<Token>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    private Set<UserRole> userRoles = new HashSet<UserRole>(0);

    public User() {
    }

    public User(String username, String email, String password) {
        this.username = username;
        this.email = email;
        this.password = password;
    }

    public User(String username, String email, String password, String profile, boolean verifyEmail) {
        this.email = email;
        this.password = password;
        this.profile = profile;
        this.username = username;
        this.verifyEmail = verifyEmail;
    }

    public User(String id, Date createdAt, String email, String hashPassword, String profile,
                Date updatedAt, String username, boolean verifyEmail, Set<Collection> collections, Set<Token> tokens,
                Set<UserRole> userRoles) {
        this.id = id;
        this.createdAt = createdAt;
        this.email = email;
        this.password = hashPassword;
        this.profile = profile;
        this.updatedAt = updatedAt;
        this.username = username;
        this.verifyEmail = verifyEmail;
        this.collections = collections;
        this.tokens = tokens;
        this.userRoles = userRoles;
    }

    @PreUpdate
    public void setUpdatedAt() {
        this.updatedAt = new Date();
    }
}
