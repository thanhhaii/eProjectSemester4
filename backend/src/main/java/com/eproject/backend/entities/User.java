package com.eproject.backend.entities;
// Generated Jan 3, 2022, 8:04:04 PM by Hibernate Tools 5.1.10.Final

import org.hibernate.annotations.GenericGenerator;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "photoshare", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "username") })
public class User implements java.io.Serializable {

	private String id;
	private Date createdAt;
	private String email;
	private String hashPassword;
	private Date memberExpireAt;
	private String profile;
	private Date updatedAt;
	private String username;
	private boolean verifyEmail;
	private Set<Collection> collections = new HashSet<Collection>(0);
	private Set<Token> tokens = new HashSet<Token>(0);
	private Set<UserRole> userRoles = new HashSet<UserRole>(0);

	public User() {
	}

	public User(String id, Date createdAt, String email, String hashPassword, Date memberExpireAt, String profile,
			Date updatedAt, String username, boolean verifyEmail) {
		this.id = id;
		this.createdAt = createdAt;
		this.email = email;
		this.hashPassword = hashPassword;
		this.memberExpireAt = memberExpireAt;
		this.profile = profile;
		this.updatedAt = updatedAt;
		this.username = username;
		this.verifyEmail = verifyEmail;
	}

	public User(String id, Date createdAt, String email, String hashPassword, Date memberExpireAt, String profile,
			Date updatedAt, String username, boolean verifyEmail, Set<Collection> collections, Set<Token> tokens,
			Set<UserRole> userRoles) {
		this.id = id;
		this.createdAt = createdAt;
		this.email = email;
		this.hashPassword = hashPassword;
		this.memberExpireAt = memberExpireAt;
		this.profile = profile;
		this.updatedAt = updatedAt;
		this.username = username;
		this.verifyEmail = verifyEmail;
		this.collections = collections;
		this.tokens = tokens;
		this.userRoles = userRoles;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(generator = "UUID")
	@GenericGenerator(
			name = "UUID",
			strategy = "org.hibernate.id.UUIDGenerator"
	)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", nullable = false, length = 10)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "email", unique = true, nullable = false, length = 120)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "hash_password", nullable = false)
	public String getHashPassword() {
		return this.hashPassword;
	}

	public void setHashPassword(String hashPassword) {
		this.hashPassword = hashPassword;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "member_expire_at", nullable = false, length = 10)
	public Date getMemberExpireAt() {
		return this.memberExpireAt;
	}

	public void setMemberExpireAt(Date memberExpireAt) {
		this.memberExpireAt = memberExpireAt;
	}

	@Column(name = "profile", nullable = false)
	public String getProfile() {
		return this.profile;
	}

	public void setProfile(String profile) {
		this.profile = profile;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_at", nullable = false, length = 10)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "username", unique = true, nullable = false, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "verify_email", nullable = false)
	public boolean isVerifyEmail() {
		return this.verifyEmail;
	}

	public void setVerifyEmail(boolean verifyEmail) {
		this.verifyEmail = verifyEmail;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Collection> getCollections() {
		return this.collections;
	}

	public void setCollections(Set<Collection> collections) {
		this.collections = collections;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Token> getTokens() {
		return this.tokens;
	}

	public void setTokens(Set<Token> tokens) {
		this.tokens = tokens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserRole> getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}

}
